% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polynomial_matrix.R
\name{polynomial_matrix}
\alias{polynomial_matrix}
\title{Create polynomial matrix}
\usage{
polynomial_matrix(l, u = abs(l), d0 = 0, d1 = 3)
}
\arguments{
\item{l, u}{lower bound (usually negative) and upper bound (usually positive) of the polynomial matrix.}

\item{d0, d1}{lower and polynomial degree of the polynomial matrix.}
}
\description{
Create polynomial matrix used in local polynomial regression (see details).
}
\details{
\code{polynomial_matrix()} computes the following matrix
\deqn{
\begin{pmatrix}
(l)^{d_0} & (l)^{d_0+1} & \cdots&(l)^{d_1}\\
(l+1)^{d_0} & (l+1)^{d_0+1} & \cdots&(l+1)^{d_1} \\
\vdots & \vdots & \cdots & \vdots \\
(p)^{d_0} & (p)^{d_0+1} & \cdots&(p)^{d_1}
\end{pmatrix}
}
}
\examples{
# For example to reproduce DAF filters
daf <- lp_filter(horizon = 6, endpoints = "DAF")
q <- 0
X <- polynomial_matrix(l = -6, u = q, d0 = 0, d1 = 3)
K <- diag(sapply(-6:q, function(i) get_kernel(horizon = 6)[i]))
e_1 <- c(1, 0, 0, 0)
q0 <- K \%*\% X \%*\% solve(t(X) \%*\% K \%*\% X, e_1)
q0
daf[, "q=0"]
}
